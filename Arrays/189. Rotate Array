// APPROACH 1:- 

function rotateRight(arr, k) {
    let n = arr.length;
    k = k % n;

    let temp = new Array(n);

    // Copy last k elements to the front
    for (let i = 0; i < k; i++) {
        temp[i] = arr[n - k + i];
    }

    // Copy the rest to the back
    for (let i = 0; i < n - k; i++) {
        temp[k + i] = arr[i];
    }

    // Copy back to original array
    for (let i = 0; i < n; i++) {
        arr[i] = temp[i];
    }
}

const arr = [1, 2, 3, 4, 5, 6];
const k = 2;

rotateRight(arr, k);
console.log(arr.join(" ")); // Output: 5 6 1 2 3 4



// TC:- O(N), SC:- O(1)


// Approach 2:- 


function rotateRight(arr, k) {
    let n = arr.length;
    k = k % n;

    // Helper function to reverse part of the array
    function reverse(start, end) {
        while (start < end) {
            [arr[start], arr[end]] = [arr[end], arr[start]];
            start++;
            end--;
        }
    }

    // Step 1: Reverse the whole array
    reverse(0, n - 1);

    // Step 2: Reverse the first k elements
    reverse(0, k - 1);

    // Step 3: Reverse the rest
    reverse(k, n - 1);
}

// Example:
const arr = [1, 2, 3, 4, 5, 6];
const k = 2;

rotateRight(arr, k);
console.log(arr.join(" ")); // Output: 5 6 1 2 3 4

// TC:- O(N), SC:- O(1);
