// problem link :- https://www.geeksforgeeks.org/problems/shortest-path-in-undirected-graph-having-unit-distance/1



class Solution {
    shortestPath(adj, src) {
        // code here
            const V = adj.length;
        const dist = new Array(V).fill(-1);
        const visited = new Array(V).fill(false);

        const queue = [];
        queue.push(src);
        visited[src] = true;
        dist[src] = 0;

        while (queue.length) {
            const node = queue.shift();

            for (let neighbor of adj[node]) {
                if (!visited[neighbor]) {
                    visited[neighbor] = true;
                    dist[neighbor] = dist[node] + 1;
                    queue.push(neighbor);
                }
            }
        }

        return dist
    }
}
